// File: src//app/_app.jsx
// _app.js
import '../styles/globals.css';

function MyApp({ Component, pageProps }) {
  return <Component {...pageProps} />;
}

export default MyApp;

// File: src//app/layout.tsx
import { Inter } from "next/font/google";
import '../styles/globals.css'
import Navbar from "../components/Navbar";
import { ReactNode } from 'react';

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: ReactNode;
}

export default function RootLayout({ children }: RootLayoutProps) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <Navbar />
        <div className="bg-background text-foreground min-h-screen">
          {children}
        </div>
      </body>
    </html>
  );
}

// File: src//app/page.tsx
import React from 'react';
import '../styles/globals.css'
import Inventory from '../components/Inventory';
import TestButton from '../components/TestButton'

const Page: React.FC = () => {
  return (
    <div className="pt-20 space-y-10">
    {/* Render Inventory Component */}
      <Inventory />
      
    {/* Additional sections/components can be added here if needed */}
    </div>
  );
};

export default Page;

// File: src//components/Inventory.jsx
'use client';

import React, { useState, useEffect } from 'react';
import { firestore } from '@/firebase';
import {
  collection,
  doc,
  getDocs,
  query,
  setDoc,
  deleteDoc,
  getDoc,
} from 'firebase/firestore';


const Inventory = () => {
  const [inventory, setInventory] = useState([]);
  const [itemName, setItemName] = useState('');
  const [open, setOpen] = useState(false);

  const updateInventory = async () => {
    const snapshot = query(collection(firestore, 'inventory'));
    const docs = await getDocs(snapshot);
    const inventoryList = [];
    docs.forEach((doc) => {
      inventoryList.push({ name: doc.id, ...doc.data() });
    });
    setInventory(inventoryList);
  };

  const addItem = async (item) => {
    const docRef = doc(collection(firestore, 'inventory'), item);
    const docSnap = await getDoc(docRef);
    if (docSnap.exists()) {
      const { quantity } = docSnap.data();
      await setDoc(docRef, { quantity: quantity + 1 });
    } else {
      await setDoc(docRef, { quantity: 1 });
    }
    await updateInventory();
  };

  const removeItem = async (item) => {
    const docRef = doc(collection(firestore, 'inventory'), item);
    const docSnap = await getDoc(docRef);
    if (docSnap.exists()) {
      const { quantity } = docSnap.data();
      if (quantity === 1) {
        await deleteDoc(docRef);
      } else {
        await setDoc(docRef, { quantity: quantity - 1 });
      }
    }
    await updateInventory();
  };

  useEffect(() => {
    updateInventory();
  }, []);

  return (
    <div className="container mx-auto p-6">
      <h1 className="text-4xl font-bold mb-6">Inventory Management</h1>

      {/* Add Item Section */}
      <div className="mb-6">
        <input
          type="text"
          className="border rounded p-2 mr-2"
          placeholder="Enter item name"
          value={itemName}
          onChange={(e) => setItemName(e.target.value)}
        />
        <button
          className="bg-primary text-primary-foreground hover:bg-primary/90 p-2 rounded"
          style={{ backgroundColor: 'blue', color: 'white', padding: '8px', borderRadius: '4px' }}
          onClick={() => {
            addItem(itemName);
            setItemName('');
          }}
        >
          Add Item
        </button>
      </div>

      {/* Inventory List */}
      <div className="border p-4 rounded">
        <h2 className="text-2xl font-semibold mb-4">Inventory Items</h2>
        {inventory.map(({ name, quantity }) => (
          <div
            key={name}
            className="flex justify-between items-center mb-4 p-2 border-b"
          >
            <span className="text-xl">{name}</span>
            <div className="flex items-center">
              
              
              <button
                className="bg-secondary text-secondary-foreground hover:bg-secondary/90 p-2 rounded mr-2"
                style={{ backgroundColor: 'red', color: 'white', padding: '8px', borderRadius: '4px' }}
                onClick={() => removeItem(name)}
              >
                Remove Item
              </button>

              <span className="text-lg mr-4">Quantity: {quantity}</span>

              <button
                className="bg-primary hover:bg-primary/90 text-primary-foreground p-2 rounded"
                style={{ backgroundColor: 'green', color: 'white', padding: '8px', borderRadius: '4px' }}
                onClick={() => addItem(name)}
              >
                Add More
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Inventory;

// File: src//components/Navbar.tsx
'use client';

import Link from "next/link";
import React, { useState } from "react";
import { FaBars, FaTimes } from "react-icons/fa";

const Navbar = () => {
  const [nav, setNav] = useState(false);

  const links = [
    { id: 1, link: "inventory" },
    { id: 2, link: "product" },
  ];

  return (
    <div className="flex justify-between items-center w-full h-20 px-4 text-white bg-black fixed nav">
      <div>
        {/* <h1 className="text-5xl font-signature ml-2"><a className="link-underline hover:transition ease-in-out delay-150 hover:underline hover:decoration-solid" href="">Logo</a></h1> */}
        <h1 className="text-5xl font-signature ml-2">
          <a
            className="link-underline link-underline-black"
            href=""
            target="_blank"
            rel="noreferrer"
          >
            Stock Up
          </a>
        </h1>
      </div>

      <ul className="hidden md:flex">
        {links.map(({ id, link }) => (
          <li
            key={id}
            className="nav-links px-4 cursor-pointer capitalize font-medium text-gray-500 hover:scale-105 hover:text-white duration-200 link-underline"
          >
            <Link href={link}>{link}</Link>
          </li>
        ))}
      </ul>

      <div
        onClick={() => setNav(!nav)}
        className="cursor-pointer pr-4 z-10 text-gray-500 md:hidden"
      >
        {nav ? <FaTimes size={30} /> : <FaBars size={30} />}
      </div>

      {nav && (
        <ul className="flex flex-col justify-center items-center absolute top-0 left-0 w-full h-screen bg-gradient-to-b from-black to-gray-800 text-gray-500">
          {links.map(({ id, link }) => (
            <li
              key={id}
              className="px-4 cursor-pointer capitalize py-6 text-4xl"
            >
              <Link onClick={() => setNav(!nav)} href={link}>
                {link}
              </Link>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
};

export default Navbar;

// File: src//components/TestButton.jsx
'use client';

import React from 'react';

const TestButton = () => {
  const handleClick = () => {
    console.log('Button clicked');
  };

  return (
    <button
      onClick={handleClick}
      className="bg-blue-500 text-black py-2 px-4 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50"
    >
      Test Button
    </button>
  );
};

export default TestButton;


// Initialize Firebase
const app = initializeApp(firebaseConfig);
const firestore = getFirestore(app);

export {firestore}
// File: src//styles/globals.css
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --background: 0 0% 100%;
    --foreground: 222.2 47.4% 11.2%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 47.4% 11.2%;
    --radius: 0.5rem;
  }


html {
    scroll-behavior: smooth;
    font-family: 'Raleway', sans-serif;
}

.custom-img {
    background-image: url("https://images.unsplash.com/photo-1504025468847-0e438279542c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1269&q=80");
}
